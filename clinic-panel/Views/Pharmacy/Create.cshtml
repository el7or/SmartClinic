@model clinic_panel.DTOs.PharmacyCreateDTO

@{
    ViewBag.Title = "Create";
}

<h2>إضافة صيدلية</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <h3>بيانات الدخول:</h3>

    <div class="form-group">
        <label class="control-label col-md-2">اسم المستخدم</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">كلمة المرور</label>
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { @class = "form-control", @autocomplete = "off" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <h3>بيانات الصيدلية:</h3>

    <div class="form-group">
        <label class="control-label col-md-2">اسم الصيدلية</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.PharmacyName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PharmacyName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">اسم الصيدلي</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.PharmacistName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PharmacistName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">عنوان الصيدلية</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">هاتف 1</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">هاتف 2</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">واتس آب</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.WhatsApp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WhatsApp, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">الإيميل</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <h3>بيانات الاشتراك:</h3>

    <div class="form-group">
        <label class="control-label col-md-2">باقة الاشتراك</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Plan, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Plan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">قيمة الاشتراك الشهري</label>
        <div class="col-md-10  form-inline">
            @Html.EditorFor(model => model.SignUpFee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } }) ج.م
            @Html.ValidationMessageFor(model => model.SignUpFee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">تاريخ بداية الاشتراك</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.SubsStartDate, new { htmlAttributes = new { @Value = Model.SubsStartDate.ToString("yyyy/MM/dd"), @type = "text", @class = "form-control datepicker", @readonly = "readonly" } })
            @*@Html.ValidationMessageFor(model => model.SubsStartDate, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">ملاحظات على الاشتراك</label>
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.SubsNote, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SubsNote, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="حفظ" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("رجوع", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            // initial Datepicker
            $.datepicker.setDefaults($.datepicker.regional['ar']);
            $('#SubsStartDate').datepicker({
                //changeMonth: true,
                //changeYear: true,
                //showButtonPanel: true,
                //dateFormat: 'MM yy',
                //onClose: function (dateText, inst) {
                //    $(this).datepicker('disable');
                //    $(this).datepicker('setDate', new Date(inst.selectedYear,  inst.selectedMonth, 1));
                //    $(this).datepicker('enable');
                //    $(this).text(new Date(inst.selectedYear, inst.selectedMonth, 1));
                //}
                dateFormat: "yy/mm/dd",
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                onClose: function (dateText, inst) {
                    function isDonePressed() {
                        return ($('#ui-datepicker-div').html().indexOf('ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all ui-state-hover') > -1);
                    }

                    if (isDonePressed()) {
                        var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                        var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                        $(this).datepicker('setDate', new Date(year, month, 1)).trigger('change');

                        $('.date-picker').focusout()//Added to remove focus from datepicker input box on selecting date
                    }
                },
                //beforeShow: function (input, inst) {
                //    inst.dpDiv.addClass('month_year_datepicker')
                //    if ((datestr = $(this).val()).length > 0) {
                //        year = datestr.substring(datestr.length - 4, datestr.length);
                //        month = datestr.substring(0, 2);
                //        $(this).datepicker('option', 'defaultDate', new Date(year, month - 1, 1));
                //        $(this).datepicker('setDate', new Date(year, month - 1, 1));
                //        $(".ui-datepicker-calendar").hide();
                //    }
                //}
            });
        });
    </script>
}

@section Styles {
    <style>
        .ui-datepicker-calendar {
            display: none;
        }
    </style>
}
